НОД / GCD - это такое наибольшее натуральное число, на которое X и Y делятся без остатка

НОД(18, 24) = 6
18 = 2 * 3 * 3 (учитывается: 2)
24 = 2 * 2 * 2 * 3 (учитывается: 3)

Поиск НОД
1. разложить A на простые множители
2. разложить B на простые множители
3. перемножить одинаковые множители с учетом разложения
Минус такого решения - требуется доп. память 

! проверка делимости: n % k = 0 (остаток == 0)

Поиск НОД через разложение
Можем сразу искать одинаковые делители A и B, собирать из них результат
Как только находим делитель X:
- делим A на X
- делим B на X
- домножаем результат на X
время: T(A, B) = O(min(a, b))
память: M(A, B) = O(1)

Как сделать быстрее:
деление с остатком (Алгоритм Евклида)
a = b * k + r
O <= r < b
Берем остатки от деления, пока не получим 0
a = b * k1 + r1
    b = r1 * k2 + r2
        r1 = r2 * k3 + r3
            r(n-1) = r(n) * k(n+1)
время: T(A, B) = O(log(min(a, b)))
память: M(A, B) = O(1)
Пример:
8910 = 2340 * k1 + 1890 (k1 = 3)
    2340 = 1890 * k2 + 450 (k2 = 1)
        1890 = 450 * k3 + 90 (k3 = 4)
            450 = 90 * k4  (k4 = 5)

Теорема
r(n) является НОД A и B
1. r(n) является делителем A и B
2. r(n) делится на любой делитель A и B



НОК / LCM (наименьшее общее кратное) - НОК X и Y, это такое наименьшее натуральное число, которое делится и на X, и на Y без остатка
НОК можно посчитать, разложив оба числа на простые
НОК = произведение множителей, которые встречаются хотя бы в одном разложении. Учитывается максимальное число повторов
18 = 2 * 3 * 3 (учитывается: 3, 3)
24 = 2 * 2 * 2 * 3 (учитывается: 2, 2, 2)
НОК(18, 24) = 2 * 2 * 2 * 3 * 3

Как связаны НОД и НОК
НОД(a, b) = d
Можно представить:
    a = e * d
    b = f * d
e и f - взаимно простые
НОК(a, b) = e * f * d

Домножим на d:
НОК(a, b) * d = e * f * d * d
НОК(a, b) * НОД(a, b) = e * d * f * d
НОК(a, b) * НОД(a, b) = a * b

НОК(a, b) = a * b / НОД(a, b)
время: T(A, B) = O(log(min(a, b)))
память: M(A, B) = O(1)



Системы счисления
А = 10644(в 10) = 1 * 10^4 + 0 * 10^3 + 6 * 10^2 + 4 * 10^1 + 4 * 10^0

Удобно перебирать от первого символа к последнему (Схема Горнера)
А = 10644(в 10) = (((1 * 10 + 0) * 10 + 6) * 10 + 4) * 10 + 4
СС с основанием 7
А = 10644(в 7) = 1 * 7^4 + 0 * 7^3 + 6 * 7^2 + 4 * 7^1 + 4 * 7^0

Из числа в строку (как имея целое число получить его запись в нужной системе счисления?)
Можем получать последую цифру - это остаток от деления числа на основание

СС с основанием 16
Целое число в его запись в нужной СС: использовать не только цифры но и буквы ABCDEF 


Решето Эратосфена
время: T(n) = O(n log log n)
память: M(n) = O(1)