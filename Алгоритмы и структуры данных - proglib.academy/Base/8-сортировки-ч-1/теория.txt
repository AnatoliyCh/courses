Сортировка - алгоритм упорядочивания элементов массива
    Локальность. Локальная сортировка упорядочивает массив без использования доп. памяти
    Стабильность. Стабильная сортировка сохраняет порядок равных элементов. Равных с точки зрения компаратора
        пример: сортировка пар "Имя, Фамилия" по имени
    
Алгоритмы
    Сортировка выбором
        - массив разделен на 2 части
            левая - готовая, правая - нет
        - на одном шаге:
            1. ищем минимум в правой части
            2. меняем его с первым элементом правой части
            3. сдвигаем границу разделения на 1 вправо        
        Анализ
            - в любом случае: T(n) = O(n^2)
            - на шаге k:
                - поиск минимума составляет n - k операций сравнения
                - 1 операция swap
            - сравнений: O(n^2)
            - перемещений: O(n)
        Свойства
            - локальность: да
            - стабильность: нет
    Сортировка вставками (простой алгоритм, часто применяемый на малых объемах)
        - массив разделен на 2 части
            левая - упорядоченная, правая - нет
        - на одном шаге:
            1. берем первый элемент правой части
            2. вставляем его на подходящее место в левой
                сдвигаем элементы левой части по одному - все бОльше Х
                перемещаем tmp на свое (освободившееся) место.
        Анализ
            - лучший случай: O(n)
                массив упорядочен по ВОЗРАСТАНИЮ
                2 * (n-1)   копирований
                (n-1)       сравнений
            - худший случай: O(n ^ 2)
                массив упорядочен по УБЫВАНИЮ
                2 * (n-1) + n * (n-1) / 2   копирований
                n * (n-1) / 2               сравнений
            - в среднем: O(n ^ 2)
        Оптимизации
            - используем бинарный поиск места вставки в левой части
            - используем memmove, чтобы эффективно сдвинуть часть элементов левой части вправо на 1 позицию (C++)
            O(n log n) сравнений
            O(n ^ 2) для копирований элементов (с маленькой константой)
        Свойства
            - локальность: да
            - стабильность: да
    Сортировки с O(n log n)
        пирамидальная сортировка                heap sort
        сортировка слиянием                     merge sort
        быстрая сортировка = сортировка Хоара   quick sort
    Пирамидальная сортировка (HeapSort)
        Алгоритм:
            1. строим кучу на исходном массиве
            2. N-1 раз достаем максимальный элемент, кладем его на освободившееся место в правой части
        Аналогия с сортировкой выбором:
            - берем максимум из левой части, кладем в конец левой части
            - время работы: O(n log n)         
        Анализ:
            - построение кучи:      T(n) = O(n)
            - n шагов алгоритма:    T(n) = O(n log n)
            т. е. в худшем случае общая асимптотика - O(n log n)
            - не существует лучшего случая. Т. е. вне зависимости от данных в исходном массиве время сортировки будет не менее C n log n